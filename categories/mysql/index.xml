<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mysql on yuxiay的博客</title><link>https://yuxiay.github.io/categories/mysql/</link><description>Recent content in Mysql on yuxiay的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 23 Dec 2024 18:04:06 +0800</lastBuildDate><atom:link href="https://yuxiay.github.io/categories/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>SQL优化与锁机制</title><link>https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/</link><pubDate>Mon, 23 Dec 2024 18:04:06 +0800</pubDate><guid>https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/</guid><description>&lt;h1 id="sql优化与锁机制"&gt;SQL优化与锁机制
&lt;/h1&gt;&lt;h2 id="sql优化"&gt;SQL优化
&lt;/h2&gt;&lt;p&gt;通过SQL语句前加入explain进行分析&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;explain + 正常sql语句
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;explain内容分析：&lt;/p&gt;
&lt;p&gt;&lt;img src="https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/image-20250416184440434.png"
width="1035"
height="135"
srcset="https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/image-20250416184440434_hu_b782858e413b8043.png 480w, https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/image-20250416184440434_hu_988fb3ae4c1f6a16.png 1024w"
loading="lazy"
alt="image-20250416184440434"
class="gallery-image"
data-flex-grow="766"
data-flex-basis="1840px"
&gt;&lt;/p&gt;
&lt;h3 id="explain结构分析"&gt;explain结构分析
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;id&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;id值越大，先执行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;id值相同，从上往下执行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;影响行数根据影响行数从小到大&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;select_type&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/image-20250416185251454.png"
width="1048"
height="178"
srcset="https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/image-20250416185251454_hu_de601a18e68cbe17.png 480w, https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/image-20250416185251454_hu_4955c11020ccd430.png 1024w"
loading="lazy"
alt="image-20250416185251454"
class="gallery-image"
data-flex-grow="588"
data-flex-basis="1413px"
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;PRIMARY:包含子查询SQL中的主查询（最外层）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SUBQUERY:包含子查询SQL中的子查询（非最外层）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SIMPLE:简单查询（不包含子查询，union）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DERIVED:衍生查询（使用到了临时表）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在from子查询中只有一张表&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sql" data-lang="sql"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;explain&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在from子查询中，如果有table union table2，则table1就是derived&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;type&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;索引类型&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-gdscript3" data-lang="gdscript3"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;eq_ref&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;其中：&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;const只是理想情况&lt;/span&gt;&lt;span class="err"&gt;，实际上能达到&lt;/span&gt;&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;system:只有一条数据的系统表或衍生表，只有一条数据的主查询&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;const：仅仅能查到一条数据的SQL，用于Primary key 或 unique索引&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;eq_ref：唯一索引，结果多条数据，但每条数据是唯一的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ref：非唯一索引，对于每个索引键的查询，返回匹配的所有行（0，多）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;range:检索指定范围的行，where后面是一个范围查询（between，&amp;gt; &amp;lt; &amp;gt;=, in特殊）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;index：查询全部索引中的数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;all：查询全部表中的数据&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;possible_keys&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可能用到的索引，是一种预测，不准&lt;/p&gt;
&lt;p&gt;如果是NULL则无索引&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;key&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实际用到的索引&lt;/p&gt;
&lt;p&gt;如果是NULL则无索引&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;key_lens&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;索引的长度&lt;/p&gt;
&lt;p&gt;作用：用于判断复合索引是否被完全使用&lt;/p&gt;
&lt;p&gt;ut8默认一个字符3个字节&lt;/p&gt;
&lt;p&gt;如果可以为空则+1，如果是varchar再+2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ref&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;注意：与tepe中ref区分&lt;/p&gt;
&lt;p&gt;作用：指明当前表所参照的字段(b.x)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-gdscript3" data-lang="gdscript3"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;explain&lt;/span&gt; &lt;span class="n"&gt;select&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;其中&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;可以是常量，&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src="https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/image-20250416190552617.png"
width="1042"
height="225"
srcset="https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/image-20250416190552617_hu_25d3ab20fe3ef2f.png 480w, https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/image-20250416190552617_hu_6cb55b3d06fc3396.png 1024w"
loading="lazy"
alt="image-20250416190552617"
class="gallery-image"
data-flex-grow="463"
data-flex-basis="1111px"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rows&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;被索引优化查询的数据个数(实际通过索引查询到的数据个数)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;select * from course c.teacher t where c.tid = t.tid
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src="https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/image-20250416190817544.png"
width="1018"
height="159"
srcset="https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/image-20250416190817544_hu_f617e911945ceb5c.png 480w, https://yuxiay.github.io/p/sql%E4%BC%98%E5%8C%96%E4%B8%8E%E9%94%81%E6%9C%BA%E5%88%B6/image-20250416190817544_hu_379059a05bba8fdd.png 1024w"
loading="lazy"
alt="image-20250416190817544"
class="gallery-image"
data-flex-grow="640"
data-flex-basis="1536px"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Extra&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using filesort:性能消耗比较大；需要“额外”一次排序（查询）常见于order by语句&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;explain select * from test02 where a1 = &amp;#39;&amp;#39; order by a2; --using filesort
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;小结：对于单索引，如果排序和查找是同一个字段，则不会出现using filesort
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;避免：where哪些字段，就order by哪些字段
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;alter table test02 add index idx_a1_a2_a3 (a1,a2,a3);
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;explain select * from test02 where a1 = &amp;#39;&amp;#39; order by a3; --using filesort
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;小结：对于复合索引不能跨列（最佳左前缀）
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;避免：按照复合索引的顺序使用，不要跨列或无序使用（where和order by拼起来）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;using temporary:性能损耗大，用到了临时表，一般出现在group by语句中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;using index:性能提升；索引覆盖。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​ 原因：不读取原文件，只从索引文件中查询数据（不需要回表查询）&lt;/p&gt;
&lt;p&gt;​ using index时，会对possible_keys和key造成影响：&lt;/p&gt;
&lt;p&gt;​ 1.如果没有where，则索引只出现在key中&lt;/p&gt;
&lt;p&gt;​ 2.如果有where，则索引出现在key和possible_key中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using where(需要回表查询)&lt;/li&gt;
&lt;li&gt;impossible where&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​ where子句永远为false&lt;/p&gt;
&lt;h3 id="优化实例"&gt;优化实例
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;第一个简单例子&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;span class="lnt"&gt;6
&lt;/span&gt;&lt;span class="lnt"&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;create table test03(
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; a1 int(4) not null,
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; a2 int(4) not null,
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; a3 int(4) not null,
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; a4 int(4) not null,
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;alter table test03 add index idx_a1_a2_a3_a4(a1,a2,a3,a4)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;explain select a1,a2,a3,a4 from test03 where a1=1 and a2=2 and a3=3 and a4=4; --推荐写法 using index
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;explain select a1,a2,a3,a4 from test03 where a4=1 and a3=2 and a2=3 and a1=4; --虽然编写顺序和索引顺序不一致，但是sql在真正执行前经过了sql优化器的调整，结果与上述是一致的
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;explain select a1,a2,a3,a4 from test03 where a1=1 and a2=2 and a4=4 order by a3; --以上sql用到了俩个索引a1,a2,该俩个字段不需要回表查询using index,a4需要回表查询
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;总结：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果（abcd）复合索引和使用的顺序全部一致（且不跨列使用），则复合索引全部使用，如果部分一致，则使用部分索引&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;where和order by拼起来，不要跨列使用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;单表优化&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加索引 根据SQL解析顺便，来调整索引顺序，先解析where后解析select 索引一旦进行升级优化，需要将之前废弃索引删掉&lt;/li&gt;
&lt;li&gt;最佳左前缀，保持索引的定义和使用的顺序一致性&lt;/li&gt;
&lt;li&gt;将包含in的查询放到最后&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;多表优化&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当编写 &lt;code&gt;on t.cid=c.tid&lt;/code&gt; 时，将数据量小的表放左边（假设t表小）&lt;/li&gt;
&lt;li&gt;索引往哪个表加？&amp;ndash;小表驱动大表 &amp;ndash;索引建立在经常使用的字段上&lt;/li&gt;
&lt;li&gt;一般情况，对于左外连接给左表加索引，对于右外连接给右表加索引&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;避免索引失效的一些原则&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;复合索引，不要跨列或无序使用（最佳左前缀）&lt;/li&gt;
&lt;li&gt;复合索引，尽量使用全索引匹配&lt;/li&gt;
&lt;li&gt;不要在索引上进行任何操作（计算，函数，类型转换），否则索引失效，对于复合索引，如果左边失效，则右边全部失效&lt;/li&gt;
&lt;li&gt;复合索引不能使用不等于或&lt;code&gt;is null&lt;/code&gt;,否则自身及右侧全部失效&lt;/li&gt;
&lt;li&gt;复合索引中如果有范围查询（&amp;gt;,&amp;lt;,in），则右侧索引全部失效（概率情况）&lt;/li&gt;
&lt;li&gt;尽量使用索引覆盖（using index）,不会出现概率情况&lt;/li&gt;
&lt;li&gt;like尽量以常量开头，不要以%开头，否则索引失效（using index情况下不会失效）&lt;/li&gt;
&lt;li&gt;尽量不要使用类型转换（显示，隐式），否则都会使索引失效&lt;/li&gt;
&lt;li&gt;尽量不要使用or，否则索引失效&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;一些其它优化方法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;exist和in
&lt;ul&gt;
&lt;li&gt;如果主查询的数据集大，则使用In&lt;/li&gt;
&lt;li&gt;如果子查询的数据集大，则使用exist&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;order by 优化
&lt;ul&gt;
&lt;li&gt;单路排序：只读取一次（全部字段），在buffer中进行排序。但此种单路排序会有一定隐患，不一定真的是单路，可能会多次IO&lt;/li&gt;
&lt;li&gt;提高order by查询策略：
&lt;ul&gt;
&lt;li&gt;选择使用单路，双路，调整buffer容量大小&lt;/li&gt;
&lt;li&gt;避免select *&lt;/li&gt;
&lt;li&gt;复合索引，不要跨列使用，避免using filesort&lt;/li&gt;
&lt;li&gt;保证全部的排序字段排序一致性（都是升序或排序）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;SQL排查&amp;ndash;慢查询日志&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MySQL提供的一种日志记录，用于记录MySQL中相应时间超过阈值的SQL语句（long_query_time,默认10秒）&lt;/p&gt;
&lt;p&gt;慢查询日志默认是关闭的；建议开发调优时打开，而最终部署时关闭&lt;/p&gt;
&lt;p&gt;检查是否开启了慢查询日志: &lt;code&gt;show variables like '%slow_query_log';&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;开启慢查询日志：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt; 1
&lt;/span&gt;&lt;span class="lnt"&gt; 2
&lt;/span&gt;&lt;span class="lnt"&gt; 3
&lt;/span&gt;&lt;span class="lnt"&gt; 4
&lt;/span&gt;&lt;span class="lnt"&gt; 5
&lt;/span&gt;&lt;span class="lnt"&gt; 6
&lt;/span&gt;&lt;span class="lnt"&gt; 7
&lt;/span&gt;&lt;span class="lnt"&gt; 8
&lt;/span&gt;&lt;span class="lnt"&gt; 9
&lt;/span&gt;&lt;span class="lnt"&gt;10
&lt;/span&gt;&lt;span class="lnt"&gt;11
&lt;/span&gt;&lt;span class="lnt"&gt;12
&lt;/span&gt;&lt;span class="lnt"&gt;13
&lt;/span&gt;&lt;span class="lnt"&gt;14
&lt;/span&gt;&lt;span class="lnt"&gt;15
&lt;/span&gt;&lt;span class="lnt"&gt;16
&lt;/span&gt;&lt;span class="lnt"&gt;17
&lt;/span&gt;&lt;span class="lnt"&gt;18
&lt;/span&gt;&lt;span class="lnt"&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-gdscript3" data-lang="gdscript3"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;临时开启：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;slow_query_log&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;在内存中开启&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;exit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;永久开启：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cnf&lt;/span&gt; &lt;span class="err"&gt;中追加配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mysqld&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;slow_query_log&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;slow_query_log_file&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;慢查询阈值：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;variables&lt;/span&gt; &lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%lo&lt;/span&gt;&lt;span class="s1"&gt;ng_query_time%&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;临时设置阈值：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;set&lt;/span&gt; &lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;long_query_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="err"&gt;设置完毕后不会立刻生效，需要重新登陆后才能生效&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="err"&gt;永久设置阈值：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cnf&lt;/span&gt; &lt;span class="err"&gt;中追加配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mysqld&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;long_query_time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;查询超过阈值的SQL：
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;show global status like &amp;#39;%slow_queries&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;慢查询的SQL被记录在日志中，因此可以通过日志来查看具体的慢SQL
查看上述的日志文件即可&lt;/p&gt;
&lt;p&gt;通过mysqldumpslow工具查看慢SQL,可以通过一些过滤条件 快速查找需要定位的慢SQL&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;span class="lnt"&gt;3
&lt;/span&gt;&lt;span class="lnt"&gt;4
&lt;/span&gt;&lt;span class="lnt"&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mysqldumpslow --help
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;s: 排序方式
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;r: 逆序
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;l: 锁定时间
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;g: 正则匹配模式
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;获取返回记录最多的三个SQL&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-gdscript3" data-lang="gdscript3"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;mysqldumpslow&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;获取访问次数最多的3个SQL&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-gdscript3" data-lang="gdscript3"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;mysqldumpslow&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;按照时间排序，前10条包含&lt;code&gt;left join&lt;/code&gt;查询语句的SQL&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-gdscript3" data-lang="gdscript3"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="n"&gt;mysqldumpslow&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;left join&amp;#34;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;localhost&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;slow&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id="profiles分析海量数据"&gt;profiles分析海量数据
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;show profiles&lt;/code&gt; &amp;ndash;默认关闭&lt;/p&gt;
&lt;p&gt;&lt;code&gt;show variables like '%profiling%';&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set profiling = on;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;show profiles;&lt;/code&gt;会记录所有 &lt;code&gt;profiling&lt;/code&gt;打开之后的 全部查询语句所花费的时间。缺点：不够精确&lt;/p&gt;
&lt;p&gt;&amp;mdash; 精确分析：sql诊断&lt;/p&gt;
&lt;p&gt;&lt;code&gt;show profile all for query Query_Id&lt;/code&gt;上一步查询到的Query_Id&lt;/p&gt;
&lt;p&gt;&lt;code&gt;show profile cpu blockio for query Query_Id&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;</description></item></channel></rss>